
play.rootHostname.main="localhost:9000"
play.filters.enabled=[]
slick.dbs.default.profile= "slick.jdbc.PostgresProfile$"
slick.dbs.default.db.dataSourceClass = "slick.jdbc.DatabaseUrlDataSource"
slick.dbs.default.db.properties.driver="org.postgresql.Driver"
slick.dbs.default.db.connectionTimeout=5000
slick.dbs.default.db.validationTimeout=5000
slick.dbs.default.db.characterEncoding="utf8"
slick.dbs.default.db.useUnicode=true
# Anecdotally, either Heroku's Postgresql or Play's evolution need, at least, 3 connections. I don't know why.
# Setting the below numbers to be less than 3 wouldn't work.
slick.dbs.default.db.numThreads=3
slick.dbs.default.db.minThreads=3
slick.dbs.default.db.maxThreads=3
slick.dbs.default.db.maxConnections=3
slick.dbs.default.db.queueSize=1000

akka {
  actor {
    blocking-dispatcher {
      type = Dispatcher
      executor = "thread-pool-executor"
      thread-pool-executor {
        # minimum number of threads to cap factor-based core number to
        core-pool-size-min = 4
        # No of core threads ... ceil(available processors * factor)
        core-pool-size-factor = 4.0
        # maximum number of threads to cap factor-based number to
        core-pool-size-max = 32

        # Keep alive time for threads
        keep-alive-time = 20 seconds
        # Allow core threads to time out
        allow-core-timeout = on
      }
      # Throughput defines the maximum number of messages to be
      # processed per actor before the thread jumps to the next actor.
      # Set to 1 for as fair as possible.
      throughput = 1
      # How long time the dispatcher will wait for new actors until it shuts down
      shutdown-timeout = 60 seconds
    }
  }
}